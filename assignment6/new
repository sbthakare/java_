1.    Create an immutable class called Person with final fields for name and age. Provide a constructor to initialize these fields, and make sure that once the object is created, the values cannot be changed.
==================================================================================================
2.    Create an abstract class GeometricShape with abstract methods like area() and perimeter(). Then, create concrete subclasses like Circle,
Rectangle, and Triangle that inherit from GeometricShape and implement the required methods.
==================================================================================================
3.Utilize an abstract class named Animal, featuring abstract methods sound() and move(), to design concrete subclasses such as Dog, Cat, and Bird that inherit from Animal and implement the necessary methods?
==================================================================================================
4.    Suppose a class 'A' has a static method to print "Parent". Its subclass 'B' also has a static method with the same name to print "Child". Now call this method by the objects of the two classes. Also, call this method by an object of the parent class referring to the child class i.e. A obj=new B()
==================================================================================================
5.    Create classes for a Car and an Engine. The Car class should contain an instance of the Engine class. Implement methods to start and stop the car, and display engine details.
